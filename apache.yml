---

- name: Install Apache.
  hosts: centos, ubuntu
  become: true

  # vars:
  #   apache_package: apache2
  #   apache_service: apache2
  #   apache_config_dir: /etc/apache2/sites-enabled

  handlers:
    - name: restart apache
      ansible.builtin.service:
        name: "{{ apache_service }}"
        state: restarted
      notify: restart_memcached

    - name: restart memcached
      ansible.builtin.service:
        name: memcached
        state: restarted

  pre_tasks:
    - name: Load variables files.
      ansible.builtin.include_vars: "{{ item }}"
      with_first_found:
        - "vars/apache_{{ ansible_os_family }}.yml"
        - "vars/apache_default.yml"

  tasks:

    # - name: Add an environment variable to the remote user's shell.
    #   lineinfile:
    #     dest: "~/.bash_profile"
    #     regexp: '^ENV_VAR= '
    #     line: 'ENV_VAR=value'
      # become: false

    # - name: Get the value of an environment variable.
    #   shell: 'source ~/.bash_profile && echo $ENV_VAR'
    #   register: foo
    # - debug:
    #     msg: "The variable is {{ foo.stdout }}"

    - name: Ensure Apache is installed.
      ansible.builtin.package:
        name: "{{ apache_package }}"
        state: present
      register: foo

    - name: Debug foo.
      ansible.builtin.debug:
        var: foo['rc']

    - name: Copy test config file.
      ansible.builtin.copy:
        src: files/test.conf
        dest: "{{ apache_config_dir }}/test.conf"
        owner: root
        group: root
        mode: 0644
      notify: restart apache

    # - name: Make sure handlers are flushed immediately.
    #   meta: flush_handlers
    - name: Ensure Apache is running and starts at boot.
      ansible.builtin.service:
        name: "{{ apache_service }}"
        state: started
        enabled: true
